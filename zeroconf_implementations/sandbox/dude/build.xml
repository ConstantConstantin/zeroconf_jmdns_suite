<project name="dude" default="default" basedir=".">
	
    <!-- Ros Variables -->
    <property file="ros.properties" />
    <include file="dependencies.xml" />
    <property name="build_root" location="build" />
    <property name="build" location="build/classes" />
    <property name="jar" location="${ros.artifact.built}"/>
    <property name="src" location="src/main/java" />
    <property name="javac-source" value="1.6" />
    <property name="javac-target" value="1.6" />
	
	<path id="classpath">
	  <pathelement location="${build}" />
	  <pathelement path="${ros.compile.classpath}" />
	</path>
	<echo message="${toString:classpath}" />
	
    <target name="default" depends="init, compile, jar" />
    
	<target name="init">
	  <fail unless="ros.compile.classpath" message="ros.properties is missing.  Please type 'rosmake' first "/>
	  <mkdir dir="${build}" />
	</target>
	
	<target name="compile" depends="init">
	  <javac debug="true" debuglevel="${debuglevel}" destdir="${build}" source="${javac-source}"
	      target="${javac-target}" includeantruntime="false">
	    <classpath refid="classpath" />
	    <src path="${src}" />
	  </javac>
	</target>
	<!--
    <path id="runtime-classpath">
       <pathelement path="${ros.runtime.classpath}" />
    </path>
    <echo message="${toString:runtime-classpath}" />
    <manifestclasspath property="manifest.class.path" jarfile="${jar}">
        <classpath refid="runtime-classpath"/>
    </manifestclasspath>
    -->
	<target name="jar" depends="init, compile">
      <!-- Can also build this in this xml - see original jmdns sources for that
      <bnd classpath="${build}" files="src/main/osgi/dude.bnd"/>
      -->
      <jar destfile="${jar}">
        <manifest>
          <attribute name="Main-Class" value="yujin.sandbox.Main" />
          <!-- <attribute name="Class-Path" value="${ros.runtime.classpath}" /> -->
          <!-- <attribute name="Class-Path" value="${manifest.class.path}" /> -->
        </manifest>
        <fileset dir="${build}" />
      </jar>
    </target>

    <target name="clean">
        <delete dir="${build_root}" includeEmptyDirs="true"  failonerror="false" />
    </target>
	<target name="help">
		<!-- add instructions for running demos later here -->
	</target>

</project>
