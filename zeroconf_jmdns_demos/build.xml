<!-- Build the Fulfillment stuff -->
<project name="zeroconf_jmdns" default="default" basedir=".">
	
    <!-- Ros Variables -->
    <property file="ros.properties" />
    <!-- Old Rosjava Check -->
    <condition property="old-rosjava">
        <matches pattern="0.1.0" string="${ros.pkg.rosjava_bootstrap.version}"/>
    </condition>
    <!-- do not exit with failure (don't want hudson to worry about it right now) -->
    <fail message="zeroconf_jmdns does not work with rosjava_core less than 0.2.0...exiting" if="old-rosjava" status="0"/>

    <include file="dependencies.xml" />
    <property name="build" location="build" />
    <property name="bin" location="bin" />
    <property name="src" location="src/java" />
    <property name="jar" location="bin/zeroconf_jmdns_demos.jar"/>
    <property name="javac-source" value="1.6" />
    <property name="javac-target" value="1.6" />
	
    <!-- 
	  Set up a path variable to be used when defining 
	  classpath inside a javac compile element 
    -->
    <path id="classpath">
        <pathelement location="${build}" />             <!-- single location --> 
	<pathelement path="${ros.compile.classpath}" /> <!-- List of paths separated by :'s -->
    </path>
    <echo message="${toString:classpath}" />
	
    <target name="default" depends="init, compile, jar" />

    <target name="init">
        <fail unless="ros.compile.classpath" message="ros.properties is missing.  Please type 'rosmake' first "/>
        <mkdir dir="${build}" />
        <mkdir dir="${bin}" />
    </target>
	
    <target name="compile" depends="init">
        <javac debug="true" debuglevel="${debuglevel}" destdir="${build}" source="${javac-source}"
	      target="${javac-target}" includeantruntime="false">
            <classpath refid="classpath" />
            <src path="${src}" />
        </javac>
    </target>

    <!-- Jar -->
    <tempfile property="temp.file"/>
    <echo message="${ros.runtime.classpath}" file="${temp.file}"/>
    <replaceregexp file="${temp.file}"
                match=":"
                replace=" "
                flags="g"
    />
    <loadfile property="manifest.classpath" srcFile="${temp.file}"/>
    <delete file="${temp.file}"/>
    <target name="jar" depends="init, compile">
      <bnd classpath="${build}" files="src/osgi/zeroconf_jmdns_demos.bnd" />
    </target>

    <!-- Clean -->
    <target name="clean">
        <delete dir="${build}" includeEmptyDirs="true"  failonerror="false" />
        <delete dir="${bin}" includeEmptyDirs="true"  failonerror="false" />
    </target>

</project>
